# THIS CODE WAS GENERATED BY CLAUDE 3.5 SONNET ON OCT 30, 2024
# Install and load required packages
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,
caret,
adabag,
xgboost,
lightgbm,
catboost,
Matrix
)
# Set seed for reproducibility
set.seed(123)
# Load and prepare the iris dataset
data(iris)
iris_shuffled <- iris[sample(nrow(iris)), ]
# Split data into training (80%) and testing (20%) sets
train_index <- createDataPartition(iris_shuffled$Species, p = 0.8, list = FALSE)
train_data <- iris_shuffled[train_index, ]
test_data <- iris_shuffled[-train_index, ]
# Prepare matrices for XGBoost and LightGBM
X_train <- as.matrix(train_data[, 1:4])
y_train <- as.integer(train_data$Species) - 1
X_test <- as.matrix(test_data[, 1:4])
y_test <- as.integer(test_data$Species) - 1
# Function to calculate accuracy
calculate_accuracy <- function(predicted, actual) {
mean(predicted == actual)
}
# 1. AdaBoost
adaboost_model <- boosting(Species ~ ., data = train_data, boos = TRUE, mfinal = 100)
library(adabag)
library(xgboost)
library(catboost)
library(Matrix)
install.packages('catboost')
library(catboost)
library(infotheo)
library(corrplot)
library(dplyr)
# Load iris dataset
data(iris)
# Calculate mutual information matrix
mi_matrix <- mutinformation(discretize(iris[,1:4]))
# Calculate correlation matrix
cor_matrix <- cor(iris[,1:4])
# Compare MI vs Correlation for Sepal.Length and Petal.Length
mi_value <- mi_matrix[1,3]
cor_value <- cor_matrix[1,3]
print(paste("Mutual Information:", round(mi_value, 3)))
print(paste("Pearson Correlation:", round(cor_value, 3)))
# Visualize both matrices
par(mfrow=c(1,2))
corrplot(mi_matrix, method="color", title="Mutual Information")
corrplot(cor_matrix, method="color", title="Pearson Correlation")
mi_matrix
# Install and load required packages
# List of packages to install and load
rm(list=ls())
packages <- c("tidyverse", "caret", "adabag", "xgboost", "lightgbm", "catboost", "Matrix")
# Function to install and load packages
install_and_load <- function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
}
# Apply the function to each package
lapply(packages, install_and_load)
# THIS CODE WAS GENERATED BY CLAUDE 3.5 SONNET ON OCT 30, 2024
# Install and load required packages
# List of packages to install and load
rm(list=ls())
packages <- c("tidyverse", "caret",  "xgboost", "lightgbm", "catboost", "Matrix")
# Function to install and load packages
install_and_load <- function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE)
library(pkg, character.only = TRUE)
}
}
# Apply the function to each package
lapply(packages, install_and_load)
# THIS CODE WAS GENERATED BY CLAUDE 3.5 SONNET ON OCT 30, 2024
# Install and load required packages
# List of packages to install and load
rm(list=ls())
packages <- c("tidyverse", "caret",  "xgboost", "lightgbm", "catboost", "Matrix")
# Function to install and load packages
install_and_load <- function(pkg) {
if (!require(pkg, character.only = TRUE)) {
install.packages(pkg, dependencies = TRUE, repos = "http://cran.us.r-project.org")
library(pkg, character.only = TRUE)
}
}
# Apply the function to each package
lapply(packages, install_and_load)
